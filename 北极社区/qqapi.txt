(function() {
    "use strict";
    function e(e, t) {
        e = String(e).split("."),
        t = String(t).split(".");
        try {
            for (var n = 0,
            r = Math.max(e.length, t.length); n < r; n++) {
                var i = isFinite(e[n]) && Number(e[n]) || 0,
                s = isFinite(t[n]) && Number(t[n]) || 0;
                if (i < s) return - 1;
                if (i > s) return 1
            }
        } catch(o) {
            return - 1
        }
        return 0
    }
    function c(e, t, n) {
        return n ?
        function() {
            var n = [].slice.call(arguments, 0);
            v(e, t, n)
        }: function() {
            var n = [].slice.call(arguments, 0);
            m(e, t, n)
        }
    }
    function h(t, i) {
        i = i || 1;
        if (e(n, i) < 0) {
            console.info("version not match, apis ignored");
            return
        }
        for (var s in t) {
            var u = t[s];
            if (!u || !u.length || u.constructor !== Array && Object.prototype.toString.call(o) !== "[object Array]") continue;
            var a = window[s];
            if (!a) {
                if (!r) continue;
                window[s] = {}
            } else typeof a == "object" && a.getClass && (l[s] = a, window[s] = {});
            var f = l[s];
            a = window[s];
            for (var h = 0,
            p = u.length; h < p; h++) {
                var d = u[h];
                if (a[d]) continue;
                f ? f[d] && (a[d] = c(s, d, !1)) : a[d] = c(s, d, !0)
            }
        }
    }
    function v(e, t, n) {
        if (!e || !t) return;
        var r = n.length && n[n.length - 1];
        r && r.call ? n.pop() : r = null;
        var i = d();
        p[String(i)] = r;
        var s = "jsbridge://" + encodeURIComponent(e) + "/" + encodeURIComponent(t) + "/" + i;
        for (var o = 0,
        u = n.length; o < u; o++) s += "/" + encodeURIComponent(String(n[o]));
        var a = document.createElement("iframe");
        a.style.cssText = "display:none;width:0px;height:0px;",
        document.body.appendChild(a),
        a.onload = function() {
            g(i, {
                r: -201,
                result: "error"
            }),
            console.error("call jsbridge error")
        },
        a.id = "jsbridge_" + i,
        a.src = s
    }
    function m(e, t, n) {
        if (!e || !t) return;
        var r = n.length && n[n.length - 1];
        r && r.call ? n.pop() : r = null;
        var i;
        try {
            var s = l[e],
            o = s[t];
            i = o.apply(s, n)
        } catch(u) {
            i = "error"
        }
        r && setTimeout(function() {
            r(i)
        },
        0)
    }
    function g(e, t) {
        e = String(e),
        t = t || {
            r: -200
        };
        var n = p[e];
        n && setTimeout(function() {
            n(t.result)
        },
        0),
        delete p[e];
        var r = document.getElementById("jsbridge_" + e);
        r && document.body.removeChild(r)
    }
    function y(t, r, i, s) {
        var o = [].slice.call(arguments, 2);
        e(n, "4.5") >= 0 ? v(t, r, o) : window[t] && window[t][r] ? window[t][r].apply(window[t], o) : typeof o[o.length - 1] == "function" && o[o.length - 1]("no such method")
    }
    var t = navigator.userAgent,
    n = function(e) {
        return e && e[1] || 0
    } (t.match(/V1_AND_SQI?_([\d\.]+)/)),
    r = n && (e(n, "4.2.2") >= 0 || /_NZ\b/.test(t)),
    i = {
        QQApi: ["isAppInstalled", "isAppInstalledBatch", "startAppWithPkgName", "checkAppInstalled", "checkAppInstalledBatch", "getOpenidBatch", "startAppWithPkgNameAndOpenId"]
    },
    s = {
        QQApi: ["lauchApp"]
    },
    u = {
        publicAccount: ["close", "getJson", "getLocation", "hideLoading", "openInExternalBrowser", "showLoading", "viewAccount"]
    },
    a = {
        publicAccount: ["getMemberCount", "getNetworkState", "getValue", "open", "openEmoji", "openUrl", "setRightButton", "setValue", "shareMessage", "showDialog"],
        qqZoneAppList: ["getCurrentVersion", "getSdPath", "getWebDisplay", "goUrl", "openMsgCenter", "showDialog", "setAllowCallBackEvent"],
        q_download: ["doDownloadAction", "getQueryDownloadAction", "registerDownloadCallBackListener", "cancelDownload", "cancelNotification"],
        qzone_http: ["httpRequest"],
        qzone_imageCache: ["downloadImage", "getImageRootPath", "imageIsExist", "sdIsMounted", "updateImage", "clearImage"],
        qzone_app: ["getAllDownAppInfo", "getAppInfo", "getAppInfoBatch", "startSystemApp", "uninstallApp"]
    },
    f = {
        coupon: ["addCoupon", "addFavourBusiness", "gotoCoupon", "gotoCouponHome", "isCouponValid", "isFavourBusiness", "isFavourCoupon", "removeFavourBusiness"]
    },
    l = {},
    p = {},
    d = function() {
        var e = 1;
        return function() {
            return e++
        }
    } ();
    h(i),
    h(s, "4.5"),
    r ? /\bPA\b/.test(t) || e(n, "4.6") >= 0 ? (h(u), h(a, "4.5"), h(f, "4.5")) : /\bQR\b/.test(t) && (h(f, "4.5"), e(n, "4.5") >= 0 && e(n, "4.6") < 0 && (window.publicAccount = {
        openUrl: function(e) {
            location.href = e
        }
    })) : h(u, "4.2"),
    window.JsBridge = {
        callMethod: y,
        callback: g,
        restoreApis: h,
        compareVersion: function(t) {
            return e(n, t)
        }
    }
})(),
function(e, t) {
    "use strict";
    function f(e, t) {
        e = String(e).split("."),
        t = String(t).split(".");
        try {
            for (var n = 0,
            r = Math.max(e.length, t.length); n < r; n++) {
                var i = isFinite(e[n]) && Number(e[n]) || 0,
                s = isFinite(t[n]) && Number(t[n]) || 0;
                if (i < s) return - 1;
                if (i > s) return 1
            }
        } catch(o) {
            return - 1
        }
        return 0
    }
    function l(e) {
        var t = e.split("."),
        n = window;
        return t.forEach(function(e) { ! n[e] && (n[e] = {}),
            n = n[e]
        }),
        n
    }
    function c(e, t, n) {
        var r = typeof e == "function" ? e: window[e];
        if (!r) return null;
        var s = h(e),
        o = "__MQQ_CALLBACK_" + s;
        return window[o] = function() {
            var e = i.call(arguments);
            p(s, e, t, n),
            t && delete window[o]
        },
        o
    }
    function h(e) {
        var t = u++;
        return e && (a[t] = e),
        t
    }
    function p(e, t, n, r) {
        var i = a[e];
        i ? r ? setTimeout(function() {
            i.apply(null, t)
        },
        0) : i.apply(null, t) : console.log("mqqapi: not found such callback: " + e),
        n && delete a[e]
    }
    function d() {
        var e = i.call(arguments),
        t = e.length && e[e.length - 1];
        return typeof t == "function" ? t(null) : null
    }
    function v(e, t) {
        var r = null,
        i = e.lastIndexOf("."),
        s = l(e.substring(0, i));
        t.iOS && n.iOS ? r = t.iOS: t.android && n.android ? r = t.android: t.browser && (r = t.browser),
        s[e.substring(i + 1)] = r || d
    }
    function m(e, r) {
        var i = document.createElement("iframe");
        i.style.cssText = "display:none;width:0px;height:0px;";
        var s = function() {
            g(r, {
                r: -201,
                result: "error"
            })
        };
        n.iOS && (i.onload = s, i.src = e);
        var o = document.body || document.documentElement;
        o.appendChild(i),
        n.android && (i.onload = s, i.src = e);
        var u = n.__RETURN_VALUE;
        return n.__RETURN_VALUE = t,
        setTimeout(function() {
            i.parentNode.removeChild(i)
        },
        0),
        u
    }
    function g(e, t) {
        var r;
        n.iOS ? r = i.call(arguments, 1) : n.android && (r = [t.result]),
        p(e, r)
    }
    function y(e, t, r, s) {
        if (!e || !t) return null;
        var o, u, a, l;
        r = i.call(arguments, 2),
        s = r.length && r[r.length - 1],
        s && typeof s == "function" ? r.pop() : typeof s == "undefined" ? r.pop() : s = null;
        if (n.android && f(n.QQVersion, "4.5") < 0) {
            if (window[e] && window[e][t]) {
                var c = window[e][t].apply(window[e], r);
                return s ? s(c) : c
            }
            s && s(n.ERROR_NO_SUCH_METHOD)
        } else if (n.iOS) {
            o = "jsbridge://" + encodeURIComponent(e) + "/" + encodeURIComponent(t);
            for (u = 0, a = r.length, l; u < a; u++) l = r[u],
            typeof l == "object" && (l = JSON.stringify(l)),
            u === 0 ? o += "?p=": o += "&p" + u + "=",
            o += encodeURIComponent(String(l));
            n.android && (o += "#" + h(s));
            var p = m(o);
            if (n.iOS) return p = p ? p.result: null,
            typeof s == "function" ? s(p) : p
        } else if (n.android) {
            var d = h(s);
            o = "jsbridge://" + encodeURIComponent(e) + "/" + encodeURIComponent(t) + "/" + d;
            for (u = 0, a = r.length, l; u < a; u++) l = r[u],
            typeof l == "object" && (l = JSON.stringify(l)),
            o += "/" + encodeURIComponent(String(l));
            m(o, d)
        }
        return null
    }
    function b(e) {
        var t, n, r, i = e.indexOf("?"),
        s = e.substring(i + 1).split("&"),
        o = {};
        for (t = 0; t < s.length; t++) i = s[t].indexOf("="),
        n = s[t].substring(0, i),
        r = s[t].substring(i + 1),
        o[n] = decodeURIComponent(r);
        return o
    }
    function w(e) {
        var t = [];
        for (var n in e) t.push(encodeURIComponent(String(n)) + "=" + encodeURIComponent(String(e[n])));
        return t.join("&")
    }
    function E(e, t, n, r, s) {
        var o = i.call(arguments);
        typeof o[o.length - 1] == "function" ? (s = o[o.length - 1], o.pop()) : s = null,
        o.length === 4 ? r = o[o.length - 1] : r = {},
        s && (r.callback_type = "javascript", r.callback_name = c(function(e) {
            s(b(e))
        })),
        r.src_type = "web",
        r.version || (r.version = 1);
        var u = e + "://" + encodeURIComponent(t) + "/" + encodeURIComponent(n) + "?" + w(r);
        m(u)
    }
    var n = window[e] = window[e] || {},
    r = navigator.userAgent,
    i = Array.prototype.slice,
    s = /(iPad|iPhone|iPod).*? QQ\/([\d\.]+)/,
    o = /\bV1_AND_SQI?_([\d\.]+)(.*? QQ\/([\d\.]+))?/,
    u = 1,
    a = {};
    n.iOS = s.test(r),
    n.android = o.test(r),
    n.iOS && n.android && (n.iOS = !1),
    n.version = "20140416001",
    n.ERROR_NO_SUCH_METHOD = "no such method",
    !n.android && !n.iOS && console.log("mqqapi: not android or ios"),
    n.compare = function(e) {
        return f(n.QQVersion, e)
    },
    n.android && (n.QQVersion = function(e) {
        return e && e[3] || e[1] || 0
    } (r.match(o)), window.JsBridge || (window.JsBridge = {}), window.JsBridge.callMethod = y, window.JsBridge.callback = g, window.JsBridge.compareVersion = n.compare),
    n.iOS && (window.iOSQQApi = n, n.__RETURN_VALUE = t, n.QQVersion = function(e) {
        return e && e[2] || 0
    } (r.match(s))),
    n.build = v,
    n.invoke = y,
    n.invokeSchema = E,
    n.callback = c,
    n.mapQuery = b,
    n.toQuery = w
} ("mqq"),
mqq.build("mqq.app.isAppInstalled", {
    iOS: function(e, t) {
        var n = mqq.invoke("app", "isInstalled", {
            scheme: e
        });
        return t ? t(n) : n
    },
    android: function(e, t) {
        mqq.invoke("QQApi", "isAppInstalled", e, t)
    }
}),
mqq.build("mqq.app.isAppInstalledBatch", {
    iOS: function(e, t) {
        var n = mqq.invoke("app", "batchIsInstalled", {
            schemes: e
        });
        return t ? t(n) : n
    },
    android: function(e, t) {
        e = e.join("|"),
        mqq.invoke("QQApi", "isAppInstalledBatch", e,
        function(e) {
            var n = [];
            e = e.split("|");
            for (var r = 0; r < e.length; r++) n.push(e[r] == 1);
            t(n)
        })
    }
}),
mqq.build("mqq.app.launchApp", {
    iOS: function(e) {
        mqq.invokeSchema(e.name, "app", "launch", e)
    },
    android: function(e) {
        mqq.invoke("QQApi", "startAppWithPkgName", e.name)
    }
}),
mqq.build("mqq.app.launchAppWithTokens", {
    iOS: function(e, t) {
        return typeof e == "object" ? mqq.invoke("app", "launchApp", e) : mqq.invoke("app", "launchApp", {
            appID: e,
            paramsStr: t
        })
    },
    android: function(e) {
        mqq.compare("4.6") >= 0 ? mqq.invoke("QQApi", "launchAppWithTokens", e.appID, e.paramsStr, e.packageName, e.flags || e.falgs || 0) : mqq.invoke("QQApi", "launchApp", e.appID, e.paramsStr, e.packageName)
    }
}),
mqq.build("mqq.app.sendFunnyFace", {
    iOS: function(e) {
        mqq.invoke("app", "sendFunnyFace", e)
    },
    android: function(e) {
        mqq.invoke("qbizApi", "sendFunnyFace", e.type, e.sessionType, e.gcode, e.guin, e.faceID)
    }
}),
mqq.build("mqq.coupon.addCoupon", {
    iOS: function(e, t, n, r, i) {
        if (typeof e == "object") {
            var s = e; (s.callback = mqq.callback(t)) && mqq.invoke("coupon", "addCoupon", s)
        } else typeof r == "function" && (i = r, r = ""),
        mqq.invoke("coupon", "addCoupon", {
            bid: e,
            cid: t,
            sourceId: n,
            city: r || "",
            callback: mqq.callback(i)
        })
    },
    android: function(e, t) {
        var n = mqq.callback(t, !0);
        mqq.invoke("coupon", "addCoupon", e.bid, e.sourceId, e.cid, n)
    }
}),
mqq.build("mqq.coupon.addFavourBusiness", {
    iOS: function(e, t, n) {
        if (typeof e == "object") {
            var r = e; (r.callback = mqq.callback(t)) && mqq.invoke("coupon", "addFavourBusiness", r)
        } else mqq.invoke("coupon", "addFavourBusiness", {
            bid: e,
            sourceId: t,
            callback: mqq.callback(n)
        })
    },
    android: function(e, t) {
        var n = mqq.callback(t, !0);
        mqq.invoke("coupon", "addFavourBusiness", e.bid, e.sourceId, n)
    }
}),
mqq.build("mqq.coupon.goToCouponHomePage", {
    iOS: function(e) {
        mqq.invoke("coupon", "goToCouponHomePage", {
            params: e
        })
    },
    android: function(e) {
        e = JSON.stringify(e || {}),
        mqq.invoke("coupon", "goToCouponHomePage", e)
    }
}),
mqq.build("mqq.coupon.isFavourBusiness", {
    iOS: function(e, t, n) {
        if (typeof e == "object") {
            var r = e; (r.callback = mqq.callback(t)) && mqq.invoke("coupon", "isFavourBusiness", r)
        } else mqq.invoke("coupon", "isFavourBusiness", {
            bid: e,
            sourceId: t,
            callback: mqq.callback(n)
        })
    },
    android: function(e, t) {
        mqq.invoke("coupon", "isFavourBusiness", e.bid, e.sourceId, t)
    }
}),
mqq.build("mqq.coupon.isFavourCoupon", {
    iOS: function(e, t, n, r) {
        if (typeof e == "object") {
            var i = e; (i.callback = mqq.callback(t)) && mqq.invoke("coupon", "isFavourCoupon", i)
        } else mqq.invoke("coupon", "isFavourCoupon", {
            bid: e,
            cid: t,
            sourceId: n,
            callback: mqq.callback(r)
        })
    },
    android: function(e, t) {
        mqq.invoke("coupon", "isFavourCoupon", e.bid, e.cid, e.sourceId, t)
    }
}),
mqq.build("mqq.coupon.removeCoupon", {
    iOS: function(e, t, n, r) {
        if (typeof e == "object") {
            var i = e; (i.callback = mqq.callback(t)) && mqq.invoke("coupon", "removeCoupon", i)
        } else mqq.invoke("coupon", "removeCoupon", {
            bid: e,
            cid: t,
            sourceId: n,
            callback: mqq.callback(r)
        })
    }
}),
mqq.build("mqq.coupon.removeFavourBusiness", {
    iOS: function(e, t, n) {
        if (typeof e == "object") {
            var r = e; (r.callback = mqq.callback(t)) && mqq.invoke("coupon", "removeFavourBusiness", r)
        } else mqq.invoke("coupon", "removeFavourBusiness", {
            bid: e,
            sourceId: t,
            callback: mqq.callback(n)
        })
    },
    android: function(e, t) {
        var n = mqq.callback(t, !0);
        mqq.invoke("coupon", "removeFavourBusiness", e.bid, e.sourceId, n)
    }
}),
mqq.build("mqq.data.batchFetchOpenID", {
    iOS: function(e, t) {
        var n = e.appIDs;
        mqq.data.fetchJson({
            url: "http://cgi.connect.qq.com/api/get_openids_by_appids",
            params: {
                appids: JSON.stringify(n)
            }
        },
        t)
    },
    android: function(e, t) {
        var n = e.appIDs;
        mqq.data.fetchJson({
            url: "http://cgi.connect.qq.com/api/get_openids_by_appids",
            params: {
                appids: JSON.stringify(n)
            }
        },
        t)
    }
}),
mqq.build("mqq.data.deleteH5Data", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        mqq.invoke("data", "deleteWebviewBizData", {
            callback: n,
            params: e
        })
    },
    android: function(e, t) {
        e = JSON.stringify(e || {}),
        mqq.invoke("publicAccount", "deleteH5Data", e, mqq.callback(t, !0))
    }
}),
mqq.build("mqq.data.deleteH5DataByHost", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        mqq.invoke("data", "deleteWebviewBizData", {
            callback: n,
            delallhostdata: 1,
            params: e
        })
    },
    android: function(e, t) {
        e = JSON.stringify(e || {}),
        mqq.invoke("publicAccount", "deleteH5DataByHost", e, mqq.callback(t, !0))
    }
}),
function() {
    function n() {
        return "UID_" + ++t
    }
    var e = {},
    t = 1;
    window.clientCallback = function(t, n) {
        var r = e[n];
        if (!r) {
            console.log("this getJson no callbackToken!");
            return
        }
        if (r.callback) {
            clearTimeout(r.timer);
            if (typeof t == "string") try {
                t = JSON.parse(t)
            } catch(i) {
                t = null
            }
            r.callback(t, r.context || window, 200),
            r.callback = null
        }
    },
    mqq.build("mqq.data.fetchJson", {
        iOS: function(e, t) {
            var n = e.url,
            r = e.params,
            i = e.options,
            s = e.context;
            components = ["_t=" + (new Date).getTime()];
            if (r) for (var o in r) components.push(o + "=" + encodeURIComponent(r[o]));
            i = i || {};
            var u = t ? mqq.callback(function(e, n, r) {
                if (typeof e == "string") try {
                    e = JSON.parse(e)
                } catch(i) {
                    e = null
                }
                t(e, n, r)
            },
            !0, !0) : null;
            mqq.invoke("data", "fetchJson", {
                method: i.method || "GET",
                timeout: i.timeout || -1,
                url: n,
                params: components.join("&"),
                callback: u,
                context: JSON.stringify(s)
            })
        },
        android: function(t, r) {
            var i = t.options || {},
            s = i.method || "GET",
            o = {
                param: t.params,
                method: s
            };
            o = JSON.stringify(o);
            var u = n();
            t.callback = r,
            e[u] = t,
            i.timeout && (t.timer = setTimeout(function() {
                t.callback && (t.callback("timeout", t.context || window, 0), t.callback = null)
            },
            i.timeout)),
            mqq.invoke("publicAccount", "getJson", t.url, o, "", u)
        }
    })
} (),
mqq.build("mqq.data.followUin", {
    iOS: function(e, t) {
        e.callback = mqq.callback(t),
        mqq.invoke("data", "followUin", e)
    },
    android: function(e, t) {
        mqq.invoke("publicAccount", "followUin", e, mqq.callback(t))
    }
}),
mqq.build("mqq.data.getUrlImage", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t, !1, !0) : null;
        mqq.invoke("data", "getUrlImage", {
            callback: n,
            params: e
        })
    },
    android: function(e, t) {
        e = JSON.stringify(e || {}),
        mqq.invoke("publicAccount", "getUrlImage", e, mqq.callback(t))
    }
}),
mqq.build("mqq.data.getUserInfo", {
    iOS: function(e) {
        var t = mqq.invoke("data", "userInfo");
        return e ? e(t) : t
    },
    android: function(e) {
        mqq.invoke("data", "userInfo", {
            callback: mqq.callback(e)
        })
    }
}),
mqq.build("mqq.data.isFollowUin", {
    iOS: function(e, t) {
        e.callback = mqq.callback(t),
        mqq.invoke("data", "isFollowUin", e)
    },
    android: function(e, t) {
        mqq.invoke("publicAccount", "isFollowUin", e, mqq.callback(t))
    }
}),
mqq.build("mqq.data.pbReport", {
    iOS: function(e, t) {
        mqq.invoke("data", "pbReport", {
            type: e,
            data: t
        })
    },
    android: function(e, t) {
        mqq.invoke("publicAccount", "pbReport", {
            type: e,
            data: t
        })
    }
}),
mqq.build("mqq.data.readH5Data", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        mqq.invoke("data", "readWebviewBizData", {
            callback: n,
            params: e
        })
    },
    android: function(e, t) {
        e = JSON.stringify(e || {}),
        mqq.invoke("publicAccount", "readH5Data", e, mqq.callback(function(e) {
            if (e && e.response && e.response.data) {
                var n = e.response.data;
                n = n.replace(/\\/g, ""),
                n = decodeURIComponent(n),
                e.response.data = n
            }
            t(e)
        },
        !0))
    }
}),
mqq.build("mqq.data.sendRequest", {
    iOS: function(e, t) {
        var n = e.url,
        r = e.params,
        i = e.options,
        s = e.context;
        components = ["_t=" + (new Date).getTime()];
        if (r) for (var o in r) components.push(o + "=" + encodeURIComponent(r[o]));
        i = i || {},
        mqq.invoke("data", "fetchJson", {
            method: i.method || "GET",
            url: n,
            params: components.join("&"),
            callback: mqq.callback(t),
            context: JSON.stringify(s)
        })
    },
    android: function(e, t) {
        var n = e.options || {},
        r = n.method || "GET";
        e.callback = mqq.callback(t),
        mqq.invoke("data", "sendRequest", e)
    }
}),
mqq.build("mqq.data.setShareInfo", {
    iOS: function(e, t) {
        return mqq.invoke("data", "setShareInfo", {
            params: e
        },
        t)
    },
    android: function(e, t) {
        mqq.invoke("QQApi", "setShareInfo", e, t)
    }
}),
mqq.build("mqq.data.setShareURL", {
    iOS: function(e, t) {
        mqq.invoke("data", "setShareURL", {
            url: e
        },
        t)
    },
    android: function(e, t) {
        mqq.compare("4.6") < 0 ? t(!1) : mqq.invoke("QQApi", "setShareURL", e, t)
    }
}),
mqq.build("mqq.data.startSyncData", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n, mqq.invoke("data", "startSyncData", e))
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        mqq.invoke("qbizApi", "startSyncData", e.appID, n)
    }
}),
mqq.build("mqq.data.stopSyncData", {
    iOS: function(e) {
        mqq.invoke("data", "stopSyncData", e)
    },
    android: function(e) {
        mqq.invoke("qbizApi", "stopSyncData", e.appID, name)
    }
}),
mqq.build("mqq.data.writeH5Data", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        mqq.invoke("data", "writeWebviewBizData", {
            callback: n,
            params: e
        })
    },
    android: function(e, t) {
        var n = e.data;
        n && (n = encodeURIComponent(n)),
        e.data = n,
        mqq.invoke("publicAccount", "writeH5Data", e, mqq.callback(t, !0))
    }
}),
mqq.build("mqq.device.connectToWiFi", {
    iOS: function(e, t) {
        t && t(mqq.ERROR_NO_SUCH_METHOD)
    },
    android: function(e, t) {
        e.callback = mqq.callback(t),
        mqq.invoke("qbizApi", "connectToWiFi", e)
    }
}),
mqq.build("mqq.device.qqVersion", {
    iOS: function(e) {
        var t = mqq.invoke("device", "qqVersion");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.qqBuild", {
    iOS: function(e) {
        var t = mqq.invoke("device", "qqBuild");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.getClientInfo", {
    iOS: function(e) {
        var t = {
            qqVersion: this.qqVersion(),
            qqBuild: this.qqBuild()
        };
        return e ? e(t) : t
    },
    android: function(e) {
        if (mqq.compare("4.6") >= 0) {
            var t = e;
            e = function(e) {
                try {
                    e = JSON.parse(e)
                } catch(n) {}
                t && t(e)
            },
            mqq.invoke("qbizApi", "getClientInfo", e)
        } else e({
            qqVersion: mqq.QQVersion,
            qqBuild: function(e) {
                return e = e && e[1] || 0,
                e && e.slice(e.lastIndexOf(".") + 1) || 0
            } (navigator.userAgent.match(/\bqq\/([\d\.]+)/i))
        })
    }
}),
mqq.build("mqq.device.systemName", {
    iOS: function(e) {
        var t = mqq.invoke("device", "systemName");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.systemVersion", {
    iOS: function(e) {
        var t = mqq.invoke("device", "systemVersion");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.model", {
    iOS: function(e) {
        var t = mqq.invoke("device", "model");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.modelVersion", {
    iOS: function(e) {
        var t = mqq.invoke("device", "modelVersion");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.getDeviceInfo", {
    iOS: function(e) {
        var t;
        return mqq.compare(4.7) >= 0 ? t = mqq.invoke("device", "getDeviceInfo") : t = {
            isMobileQQ: this.isMobileQQ(),
            systemName: this.systemName(),
            systemVersion: this.systemVersion(),
            model: this.model(),
            modelVersion: this.modelVersion()
        },
        e ? e(t) : t
    },
    android: function(e) {
        if (mqq.compare("4.6") >= 0) {
            var t = e;
            e = function(e) {
                try {
                    e = JSON.parse(e)
                } catch(n) {}
                t && t(e)
            },
            mqq.invoke("qbizApi", "getDeviceInfo", e)
        } else {
            var n = navigator.userAgent;
            e({
                isMobileQQ: !0,
                systemName: "android",
                systemVersion: function(e) {
                    return e && e[1] || 0
                } (n.match(/\bAndroid ([\d\.]+)/i)),
                model: function(e) {
                    return e && e[1] || null
                } (n.match(/;\s([^;]+)\s\bBuild\/\w+/i))
            })
        }
    }
}),
mqq.build("mqq.device.networkStatus", {
    iOS: function(e) {
        var t = mqq.invoke("device", "networkStatus");
        return e ? e(t) : t
    }
}),
mqq.build("mqq.device.networkType", {
    iOS: mqq.device.networkStatus
}),
mqq.build("mqq.device.getNetworkType", {
    iOS: function(e) {
        var t = this.networkStatus();
        return e ? e(t) : t
    },
    android: function(e) {
        mqq.compare("4.6") >= 0 ? mqq.invoke("qbizApi", "getNetworkType", e) : mqq.invoke("publicAccount", "getNetworkState",
        function(t) {
            var n = {
                "-1": 0,
                0 : 3,
                1 : 1
            },
            r = t in n ? n[t] : 4;
            e(r)
        })
    }
}),
mqq.build("mqq.device.getWebViewType", {
    iOS: function(e) {
        var t = mqq.invoke("device", "webviewType");
        return e ? e(t) : t
    },
    android: function(e) {
        var t = 1,
        n = navigator.userAgent;
        return /\bPA\b/.test(n) ? (t = 5, /\bCoupon\b/.test(n) ? t = 2 : /\bMyCoupon\b/.test(n) && (t = 3)) : /\bQR\b/.test(n) && (t = 4),
        e ? e(t) : t
    }
}),
mqq.build("mqq.device.webviewType", {
    iOS: mqq.device.getWebViewType
}),
mqq.build("mqq.device.isMobileQQ", {
    iOS: function(e) {
        var t = mqq.iOS;
        return e ? e(t) : t
    },
    android: function(e) {
        var t = mqq.android;
        return e ? e(t) : t
    }
}),
mqq.build("mqq.media.getPicture", {
    iOS: function(e, t) { ! e.outMaxWidth && e.maxWidth && (e.outMaxWidth = e.maxWidth, delete e.maxWidth),
        !e.outMaxHeight && e.maxHeight && (e.outMaxHeight = e.maxHeight, delete e.maxHeight),
        e.callback = mqq.callback(t, !0, !0),
        mqq.invoke("media", "getPicture", e)
    },
    android: function(e, t) {
        e.callback = mqq.callback(t),
        mqq.invoke("media", "getPicture", e)
    }
}),
mqq.build("mqq.media.playLocalSound", {
    iOS: function(e) {
        mqq.invoke("sensor", "playLocalSound", e)
    },
    android: function(e) {
        mqq.invoke("qbizApi", "playVoice", e.bid, e.url)
    }
}),
mqq.build("mqq.media.preloadSound", {
    iOS: function(e, t) {
        e.callback = mqq.callback(t, !0),
        mqq.invoke("sensor", "preloadSound", e)
    },
    android: function(e, t) {
        mqq.invoke("qbizApi", "preloadVoice", e.bid, e.url, mqq.callback(t, !0))
    }
}),
mqq.build("mqq.offline.checkUpdate", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n, mqq.invoke("offline", "checkUpdate", e))
    },
    android: function(e, t) {
        mqq.invoke("qbizApi", "checkUpdate", e.bid, mqq.callback(t))
    }
}),
mqq.build("mqq.offline.downloadUpdate", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n, mqq.invoke("offline", "downloadUpdate", e))
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        e.fileSize && e.fileSize > 0 ? mqq.invoke("qbizApi", "forceUpdate", e.bid, e.url, e.fileSize, n) : mqq.invoke("qbizApi", "forceUpdate", e.bid, e.url, n)
    }
}),
mqq.build("mqq.offline.isCached", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n, mqq.invoke("offline", "isCached", e))
    },
    android: function(e, t) {
        mqq.invoke("qbizApi", "isCached", e.bid, mqq.callback(t))
    }
}),
mqq.build("mqq.pay.enablePay", {
    iOS: function(e) {
        mqq.invoke("pay", "enablePay", {
            params: e
        })
    }
}),
mqq.build("mqq.pay.pay", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        mqq.invoke("pay", "pay", {
            params: e,
            callback: n
        })
    }
}),
mqq.build("mqq.redpoint.getAppInfo", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "getAppInfo", e)
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "getAppInfo", e)
    }
}),
function() {
    function n(n) {
        var r = null;
        if (e === !1) {
            e = location.search == "" ? location.hash == "" ? "": location.hash.substring(1) : location.search.substring(1),
            e = e.split("&");
            if (e.length > 0) for (var i = 0; i < e.length; i++) {
                r = e[i],
                r = r.split("=");
                if (r.length > 1) try {
                    t[r[0]] = decodeURIComponent(r[1])
                } catch(s) {
                    t[r[0]] = ""
                }
            }
        }
        return typeof t[n] != "undefined" ? t[n] : ""
    }
    function f(e) {
        var t = {
            sid: r,
            appid: e.substring(e.lastIndexOf(".") + 1),
            platid: i,
            qqver: s,
            format: "json",
            _: (new Date).getTime()
        },
        n = "get_new_msg_cnt";
        try {
            Zepto.ajax({
                type: "get",
                url: o + n,
                dataType: "json",
                data: t,
                timeout: 1e4,
                success: function(e) {
                    var t = {
                        ret: e.ecode,
                        count: 0
                    };
                    e.ecode == 0 && (t.count = e.new_msg_cnt),
                    a(t)
                },
                error: function() {
                    a({
                        ret: -1,
                        count: 0
                    })
                }
            })
        } catch(u) {
            a({
                ret: -2,
                count: 0
            })
        }
    }
    function l(e) {
        if (e.code == 0) {
            var t = {
                ret: e.code,
                count: 0
            },
            n = e.data.buffer,
            r = [];
            n = typeof n != "object" && n != "" ? JSON.parse(n) : n;
            if (typeof n.msg != "undefined") for (var i in n.msg) n.msg[i].stat == 1 && t.count++;
            a(t)
        } else a({
            ret: e.code,
            list: []
        })
    }
    var e = !1,
    t = {},
    r = n("sid"),
    i = mqq.iOS ? 110 : mqq.android ? 109 : 0,
    s = mqq.QQVersion ? mqq.QQVersion: "",
    o = "http://msg.vip.qq.com/cgi-bin/",
    u = function() {
        return mqq.compare("4.7") >= 0
    } (),
    a = null;
    mqq.build("mqq.redpoint.getNewMsgCnt", {
        iOS: function(e, t) {
            appid = String(e.path),
            a = t;
            if (u) mqq.redpoint.getAppInfo(e, l);
            else {
                if (!Zepto) {
                    typeof t == "function" ? t({
                        ret: -1e4,
                        count: 0
                    }) : null;
                    return
                }
                f(appid)
            }
        },
        android: function(e, t) {
            appid = String(e.path),
            a = t;
            if (u) mqq.redpoint.getAppInfo(e, l);
            else {
                if (!Zepto) {
                    typeof t == "function" ? t({
                        ret: -1e4,
                        count: 0
                    }) : null;
                    return
                }
                f(appid)
            }
        }
    })
} (),
function() {
    function n(n) {
        var r = null;
        if (e === !1) {
            e = location.search == "" ? location.hash == "" ? "": location.hash.substring(1) : location.search.substring(1),
            e = e.split("&");
            if (e.length > 0) for (var i = 0; i < e.length; i++) {
                r = e[i],
                r = r.split("=");
                if (r.length > 1) try {
                    t[r[0]] = decodeURIComponent(r[1])
                } catch(s) {
                    t[r[0]] = ""
                }
            }
        }
        return typeof t[n] != "undefined" ? t[n] : ""
    }
    function f(e) {
        var t = {
            sid: r,
            appid: e.substring(e.lastIndexOf(".") + 1),
            platid: i,
            qqver: s,
            format: "json",
            _: (new Date).getTime()
        },
        n = "read_msg";
        try {
            Zepto.ajax({
                type: "get",
                url: o + n,
                dataType: "json",
                data: t,
                timeout: 1e4,
                success: function(e) {
                    var t = {
                        ret: e.ecode,
                        list: []
                    };
                    if (e.ecode == 0) {
                        var n = e.msg,
                        r = [];
                        for (var i in n) r.push({
                            content: n[i].content ? n[i].content: "",
                            link: n[i].link ? n[i].link: "",
                            img: n[i].img ? n[i].img: "",
                            pubTime: n[i].time ? n[i].time: "",
                            title: n[i].title ? n[i].title: "",
                            src: n[i].src ? n[i].src: "",
                            ext1: n[i].ext1 ? n[i].ext1: "",
                            ext2: n[i].ext2 ? n[i].ext2: "",
                            ext3: n[i].ext3 ? n[i].ext3: "",
                            id: i
                        });
                        t.list = r
                    }
                    a(t)
                },
                error: function() {
                    a({
                        ret: -1,
                        list: []
                    })
                }
            })
        } catch(u) {
            a({
                ret: -2,
                list: []
            })
        }
    }
    function l(e) {
        if (e.code == 0) {
            var t = {
                ret: e.code,
                list: []
            },
            n = e.data.buffer,
            u = [];
            n = typeof n != "object" && n != "" ? JSON.parse(n) : n;
            if (typeof n.msg != "undefined") {
                for (var f in n.msg) n.msg[f].stat == 1 && (u.push({
                    content: n.msg[f].content ? n.msg[f].content: "",
                    link: n.msg[f].link ? n.msg[f].link: "",
                    img: n.msg[f].img ? n.msg[f].img: "",
                    pubTime: n.msg[f].time ? n.msg[f].time: "",
                    title: n.msg[f].title ? n.msg[f].title: "",
                    src: n.msg[f].src ? n.msg[f].src: "",
                    ext1: n.msg[f].ext1 ? n.msg[f].ext1: "",
                    ext2: n.msg[f].ext2 ? n.msg[f].ext2: "",
                    ext3: n.msg[f].ext3 ? n.msg[f].ext3: "",
                    id: f
                }), n.msg[f].stat = 2);
                e.data.buffer = n,
                e.data.iNewFlag == 0;
                if (u.length > 0) {
                    t.list = u,
                    mqq.redpoint.setAppInfo({
                        appInfo: e.data
                    },
                    function(e) {
                        console.log(JSON.stringify(e))
                    });
                    var l = e.data.appID,
                    c = {
                        sid: r,
                        appid: l,
                        platid: i,
                        qqver: s,
                        format: "json",
                        _: (new Date).getTime()
                    },
                    h = "read_msg";
                    try {
                        Zepto.ajax({
                            type: "get",
                            url: o + h,
                            dataType: "json",
                            data: c,
                            timeout: 1e4,
                            success: function(e) {},
                            error: function() {}
                        })
                    } catch(p) {}
                }
            }
            a(t)
        } else a({
            ret: e.code,
            list: []
        })
    }
    var e = !1,
    t = {},
    r = n("sid"),
    i = mqq.iOS ? 110 : mqq.android ? 109 : 0,
    s = mqq.QQVersion ? mqq.QQVersion: "",
    o = "http://msg.vip.qq.com/cgi-bin/",
    u = function() {
        return mqq.compare("4.7") >= 0
    } (),
    a = null;
    mqq.build("mqq.redpoint.getNewMsgList", {
        iOS: function(e, t) {
            appid = String(e.path),
            a = t;
            if (u) mqq.redpoint.getAppInfo(e, l);
            else {
                if (!Zepto) {
                    typeof t == "function" ? t({
                        ret: -1e4,
                        count: 0
                    }) : null;
                    return
                }
                f(appid)
            }
        },
        android: function(e, t) {
            appid = String(e.path),
            a = t;
            if (u) mqq.redpoint.getAppInfo(e, l);
            else {
                if (!Zepto) {
                    typeof t == "function" ? t({
                        ret: -1e4,
                        count: 0
                    }) : null;
                    return
                }
                f(appid)
            }
        }
    })
} (),
mqq.build("mqq.redpoint.getRedPointShowInfo", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "getRedPointShowInfo", e)
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "getRedPointShowInfo", e)
    }
}),
mqq.build("mqq.redpoint.reportRedTouch", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "reportRedTouch", e)
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "reportRedTouch", e)
    }
}),
mqq.build("mqq.redpoint.setAppInfo", {
    iOS: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "setAppInfo", e)
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        n && (e.callback = n),
        mqq.invoke("redpoint", "setAppInfo", e)
    }
}),
mqq.build("mqq.sensor.getLocation", {
    iOS: function(e) {
        var t = e ? mqq.callback(e) : null;
        return mqq.invoke("data", "queryCurrentLocation", {
            callback: t
        })
    },
    android: function(e) {
        var t = mqq.callback(function(t) {
            var n = -1,
            r = null,
            i = null;
            t && t != "null" && (t = (t + "").split(","), t.length == 2 && (n = 0, r = parseFloat(t[0] || 0), i = parseFloat(t[1] || 0))),
            e(n, i, r)
        },
        !0);
        mqq.invoke("publicAccount", "getLocation", t)
    }
}),
mqq.build("mqq.sensor.getRealLocation", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        return mqq.invoke("data", "getOSLocation", {
            params: e,
            callback: n
        })
    },
    android: function(e, t) {
        e = JSON.stringify(e || {}),
        mqq.invoke("publicAccount", "getRealLocation", e, mqq.callback(t, !0))
    }
}),
mqq.build("mqq.sensor.getSensorStatus", {
    iOS: function(e, t) {
        e = e || {
            type: "gps"
        },
        e.callbackName = mqq.callback(t),
        mqq.invoke("sensor", "getSensorStatus", e)
    }
}),
mqq.build("mqq.sensor.startAccelerometer", {
    iOS: function(e) {
        var t = mqq.callback(e, !1, !0);
        t && mqq.invoke("sensor", "startAccelerometer", {
            callback: t
        })
    },
    android: function(e) {
        var t = mqq.callback(e, !1, !0);
        mqq.invoke("qbizApi", "startAccelerometer", t)
    }
}),
mqq.build("mqq.sensor.startCompass", {
    iOS: function(e) {
        var t = mqq.callback(e, !1, !0);
        t && mqq.invoke("sensor", "startCompass", {
            callback: t
        })
    },
    android: function(e) {
        var t = mqq.callback(e, !1, !0);
        mqq.invoke("qbizApi", "startCompass", t)
    }
}),
mqq.build("mqq.sensor.startListen", {
    iOS: function(e) {
        var t = mqq.callback(e, !1, !0);
        t && mqq.invoke("sensor", "startListen", {
            callback: t
        })
    },
    android: function(e) {
        var t = mqq.callback(e, !1, !0);
        mqq.invoke("qbizApi", "startListen", t)
    }
}),
mqq.build("mqq.sensor.stopAccelerometer", {
    iOS: function() {
        mqq.invoke("sensor", "stopAccelerometer")
    },
    android: function() {
        mqq.invoke("qbizApi", "stopAccelerometer")
    }
}),
mqq.build("mqq.sensor.stopCompass", {
    iOS: function() {
        mqq.invoke("sensor", "stopCompass")
    },
    android: function() {
        mqq.invoke("qbizApi", "stopCompass")
    }
}),
mqq.build("mqq.sensor.stopListen", {
    iOS: function() {
        mqq.invoke("sensor", "stopListen")
    },
    android: function() {
        mqq.invoke("qbizApi", "stopListen")
    }
}),
mqq.build("mqq.sensor.vibrate", {
    iOS: function(e) {
        mqq.invoke("sensor", "vibrate")
    },
    android: function(e) {
        mqq.invoke("qbizApi", "phoneVibrate", e.time)
    }
}),
mqq.build("mqq.tenpay.buyGoods", {
    android: function(e, t) {
        mqq.invoke("pay", "buyGoods", JSON.stringify(e), t)
    }
}),
mqq.build("mqq.tenpay.openService", {
    android: function(e, t) {
        mqq.invoke("pay", "openService", JSON.stringify(e), t)
    }
}),
mqq.build("mqq.tenpay.openTenpayView", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t) : null;
        mqq.invoke("pay", "openTenpayView", {
            params: e,
            callback: n
        })
    },
    android: function(e, t) {
        mqq.invoke("pay", "openTenpayView", JSON.stringify(e), t)
    }
}),
mqq.build("mqq.tenpay.pay", {
    iOS: function(e, t) {
        e.order_no = e.tokenId || e.tokenID,
        mqq.invokeSchema("mqqapiwallet", "wallet", "pay", e, t)
    },
    android: function(e, t) {
        mqq.compare("4.6.1") >= 0 ? mqq.invoke("pay", "pay", JSON.stringify(e), t) : (e.token_id = e.tokenId || e.tokenID, mqq.invokeSchema("mqqapi", "tenpay", "pay", e, t))
    }
}),
mqq.build("mqq.tenpay.rechargeGameCurrency", {
    android: function(e, t) {
        mqq.invoke("pay", "rechargeGameCurrency", JSON.stringify(e), t)
    }
}),
mqq.build("mqq.tenpay.rechargeQb", {
    android: function(e, t) {
        mqq.invoke("pay", "rechargeQb", JSON.stringify(e), t)
    }
}),
mqq.build("mqq.ui.openAIO", {
    iOS: function(e) {
        mqq.invokeSchema("mqqapi", "im", "chat", e)
    },
    android: function(e) {
        mqq.invokeSchema("mqqapi", "im", "chat", e)
    }
}),
mqq.build("mqq.ui.openUrl", {
    iOS: function(e) {
        e || (e = {});
        switch (e.target) {
        case 0:
            window.open(e.url, "_self");
            break;
        case 1:
            e.styleCode = 1;
            switch (e.style) {
            case 1:
                e.styleCode = 4;
                break;
            case 2:
                e.styleCode = 2;
                break;
            case 3:
                e.styleCode = 5;
                break;
            default:
                e.styleCode = 1
            }
            mqq.invoke("nav", "openLinkInNewWebView", {
                url: e.url,
                options: e
            });
            break;
        case 2:
            mqq.invoke("nav", "openLinkInSafari", {
                url: e.url
            })
        }
    },
    android: function(e) {
        e.target == 2 ? mqq.compare("4.6") >= 0 ? mqq.invoke("publicAccount", "openInExternalBrowser", e.url) : mqq.compare("4.5") >= 0 && mqq.invoke("openUrlApi", "openUrl", e.url) : e.target == 1 ? (e.style || (e.style = 0), mqq.compare("4.6") >= 0 ? mqq.invoke("qbizApi", "openLinkInNewWebView", e.url, e.style) : mqq.compare("4.5") >= 0 ? mqq.invoke("publicAccount", "openUrl", e.url) : location.href = e.url) : location.href = e.url
    },
    browser: function(e) {
        e.target == 2 ? window.open(e.url, "_blank") : location.href = e.url
    }
}),
mqq.build("mqq.ui.openView", {
    iOS: function(e) {
        mqq.invoke("nav", "openViewController", e)
    },
    android: function(e) {
        mqq.invoke("publicAccount", "open", e.name)
    }
}),
mqq.build("mqq.ui.pageVisibility", {
    iOS: function(e) {
        mqq.invoke("ui", "pageVisibility", e)
    },
    android: function(e) {
        mqq.invoke("ui", "pageVisibility", {
            callback: mqq.callback(e)
        })
    }
}),
mqq.build("mqq.ui.popBack", {
    iOS: function() {
        mqq.invoke("nav", "popBack")
    },
    android: function() {
        mqq.invoke("publicAccount", "close")
    }
}),
mqq.build("mqq.ui.refreshTitle", {
    iOS: function() {
        mqq.invoke("nav", "refreshTitle")
    }
}),
mqq.build("mqq.ui.returnToAIO", {
    iOS: function() {
        mqq.invoke("nav", "returnToAIO")
    },
    android: function() {
        mqq.invoke("qbizApi", "returnToAIO")
    }
}),
mqq.build("mqq.ui.scanQRcode", {
    iOS: function(e) {
        var t = {};
        e && (t.callback = mqq.callback(e)),
        mqq.invoke("ui", "scanQRcode", t)
    },
    android: function(e) {
        var t = {};
        e && (t.callback = mqq.callback(e)),
        mqq.invoke("ui", "scanQRcode", t)
    }
}),
mqq.build("mqq.ui.setActionButton", {
    iOS: function(e, t) {
        var n = t ? mqq.callback(t, !1, !0) : null,
        r = typeof e == "object" ? e: {
            title: e
        };
        r.callback = n,
        mqq.invoke("nav", "setActionButton", r)
    },
    android: function(e, t) {
        var n = mqq.callback(t);
        mqq.compare("5.0") >= 0 ? (e.callback = n, mqq.invoke("ui", "setActionButton", e)) : mqq.invoke("publicAccount", "setRightButton", e.title, "", n)
    }
}),
mqq.build("mqq.ui.setLoading", {
    iOS: function(e) {
        e && (e.visible === !0 ? mqq.invoke("nav", "showLoading") : e.visible === !1 && mqq.invoke("nav", "hideLoading"), e.color && mqq.invoke("nav", "setLoadingColor", {
            r: e.color[0],
            g: e.color[1],
            b: e.color[2]
        }))
    },
    android: function(e) {
        "visible" in e && (e.visible ? mqq.invoke("publicAccount", "showLoading") : mqq.invoke("publicAccount", "hideLoading"))
    }
}),
mqq.build("mqq.ui.setOnCloseHandler", {
    iOS: function(e) {
        mqq.invoke("ui", "setOnCloseHandler", {
            callback: mqq.callback(e)
        })
    },
    android: function(e) {
        mqq.invoke("ui", "setOnCloseHandler", {
            callback: mqq.callback(e)
        })
    }
}),
mqq.build("mqq.ui.shareAudio", {
    iOS: function(e, t) {
        var n = mqq.callback(t, !0);
        mqq.invoke("nav", "shareAudio", {
            params: e,
            callback: n
        })
    },
    android: function(e, t) {
        e.req_type = 2,
        t && (e.callback = mqq.callback(t, !0)),
        mqq.invoke("QQApi", "shareMsg", e)
    }
}),
mqq.build("mqq.ui.shareRichMessage", {
    iOS: function(e, t) {
        e.callback = mqq.callback(t),
        mqq.invoke("nav", "officalAccountShareRichMsg2QQ", e)
    },
    android: function(e, t) {
        e.callback = mqq.callback(t),
        mqq.invoke("publicAccount", "officalAccountShareRichMsg2QQ", e)
    }
}),
mqq.data || (mqq.data = {}),
mqq.data.shareRichMessage = mqq.ui.shareRichMessage,
mqq.build("mqq.ui.showActionSheet", {
    iOS: function(e, t) {
        return t && (e.onclick = mqq.callback(t, !1, !0)),
        mqq.invoke("ui", "showActionSheet", e)
    },
    android: function(e, t) {
        return t && (e.onclick = mqq.callback(t)),
        mqq.invoke("ui", "showActionSheet", e)
    }
}),
mqq.build("mqq.ui.showDialog", {
    iOS: function(e, t) {
        e && (e.callback = mqq.callback(t, !0, !0), e.title = e.title + "", e.text = e.text + "", "needOkBtn" in e || (e.needOkBtn = !0), "needCancelBtn" in e || (e.needCancelBtn = !0), mqq.invoke("nav", "showDialog", e))
    },
    android: function(e, t) {
        var n = "",
        r = "";
        t && (n = mqq.callback(function() {
            t({
                button: 0
            })
        },
        !0), r = mqq.callback(function() {
            t({
                button: 1
            })
        },
        !0), n += "()", r += "()"),
        e.title = e.title + "",
        e.text = e.text + "",
        "needOkBtn" in e || (e.needOkBtn = !0),
        "needCancelBtn" in e || (e.needCancelBtn = !0),
        mqq.invoke("publicAccount", "showDialog", e.title, e.text, e.needOkBtn, e.needCancelBtn, n, r)
    }
}),
mqq.build("mqq.ui.showEQQ", {
    iOS: function(e) {
        mqq.invoke("nav", "showBusinessAccountProfile", e)
    },
    android: function(e) {
        mqq.invoke("eqq", "showEQQ", e)
    }
}),
mqq.build("mqq.ui.showOfficalAccountDetail", {
    iOS: function(e) {
        var t = typeof e == "object" ? e: {
            uin: e
        };
        mqq.invoke("nav", "showOfficalAccountDetail", t)
    },
    android: function(e) {
        mqq.compare("4.6") >= 0 ? mqq.invoke("publicAccount", "viewAccount", e.uin, e.showAIO) : mqq.invoke("publicAccount", "viewAccount", e.uin)
    }
}),
mqq.build("mqq.ui.showProfile", {
    iOS: function(e) {
        mqq.compare("4.7") >= 0 ? mqq.invoke("nav", "showProfile", e) : mqq.compare("4.6") >= 0 && !e.uinType ? mqq.invoke("nav", "showProfile", e) : (e.uinType === 1 && (e.card_type = "group"), mqq.invokeSchema("mqqapi", "card", "show_pslcard", e))
    },
    android: function(e) {
        mqq.compare("4.7") >= 0 ? mqq.invoke("publicAccount", "showProfile", e) : mqq.compare("4.6") >= 0 && !e.uinType ? mqq.invoke("publicAccount", "showProfile", e.uin) : (e.uinType === 1 && (e.card_type = "group"), mqq.invokeSchema("mqqapi", "card", "show_pslcard", e))
    }
}),
mqq.build("mqq.ui.showTips", {
    iOS: function(e) {
        mqq.invoke("ui", "showTips", e)
    },
    android: function(e) {
        mqq.invoke("ui", "showTips", e)
    }
})